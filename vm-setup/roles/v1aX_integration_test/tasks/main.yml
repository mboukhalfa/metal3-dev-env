---
- name: Install openshift client in CentOS 8 using pip3
  pip:
    executable: "pip3"
    name: openshift==0.11.2
    state: present
  become: yes
  become_user: root
  when: ansible_facts['distribution'] == "CentOS" and ansible_facts['distribution_major_version'] == '8'

- name: Generate templates for v1alpha3
  include: generate_templates.yml

- name: Download image for deployment
  include: download_image.yml
  when: v1aX_integration_test_action in image_download_actions

- name: Test inspection API
  include: inspection.yml
  when: v1aX_integration_test_action in inspection_action

- name: Provision cluster
  k8s:
    state: present
    src: "{{ TEMP_GEN_DIR }}/{{ CAPM3_VERSION }}_cluster_{{ IMAGE_OS|lower }}.yaml"
    namespace: "{{ NAMESPACE }}"
  when: v1aX_integration_test_action in provision_cluster_actions

- name: Create control plane
  k8s:
    state: present
    src: "{{ TEMP_GEN_DIR }}/{{ CAPM3_VERSION }}_controlplane_{{ IMAGE_OS|lower }}.yaml"
    namespace: "{{ NAMESPACE }}"
  when: v1aX_integration_test_action in provision_controlplane_actions

- name: Create worker nodes
  k8s:
    state: present
    src: "{{ TEMP_GEN_DIR }}/{{ CAPM3_VERSION }}_workers_{{ IMAGE_OS|lower }}.yaml"
    namespace: "{{ NAMESPACE }}"
  when: v1aX_integration_test_action in provision_workers_actions

- name: verify deployment
  include: verify.yml
  when: v1aX_integration_test_action in verify_actions

- name: pivot
  include: move.yml
  when: v1aX_integration_test_action in pivot_actions

- name: Upgrade cluster
  include: upgrade.yml
  when: v1aX_integration_test_action == "upgrading"

- name: post pivot operations
  include: post_pivot.yml
  when: v1aX_integration_test_action == "post_pivot"

- name: repivot
  include: move_back.yml
  when: v1aX_integration_test_action in repivot_actions

- name: Deprovision worker nodes
  k8s:
    state: absent
    src: "{{ TEMP_GEN_DIR }}/{{ CAPM3_VERSION }}_workers_{{ IMAGE_OS|lower }}.yaml"
    namespace: "{{ NAMESPACE }}"
  ignore_errors: yes
  when: v1aX_integration_test_action in deprovision_workers_actions

- name: Deprovision control plane
  k8s:
    state: absent
    src: "{{ TEMP_GEN_DIR }}/{{ CAPM3_VERSION }}_controlplane_{{ IMAGE_OS|lower }}.yaml"
    namespace: "{{ NAMESPACE }}"
  ignore_errors: yes
  when: v1aX_integration_test_action in deprovision_controlplane_actions

- name: Deprovision cluster
  k8s:
    state: absent
    src: "{{ TEMP_GEN_DIR }}/{{ CAPM3_VERSION }}_cluster_{{ IMAGE_OS|lower }}.yaml"
    namespace: "{{ NAMESPACE }}"
  ignore_errors: yes
  when: v1aX_integration_test_action in deprovision_cluster_actions

- name: Cleanup deployment
  include: cleanup.yml
  when: v1aX_integration_test_action in cleanup_actions

- name: Node remediation
  include: remediation.yml
  when: v1aX_integration_test_action == "remediation"

- name: Node reuse KCP test scenario
  include: node_reuse_kcp.yml
  when: v1aX_integration_test_action == "node_reuse_kcp"

- name: Node reuse MD test scenario
  include: node_reuse_md.yml
  when: v1aX_integration_test_action == "node_reuse_md"
